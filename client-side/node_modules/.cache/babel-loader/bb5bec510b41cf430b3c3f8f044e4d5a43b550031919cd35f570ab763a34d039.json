{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justm\\\\OneDrive\\\\Desktop\\\\Work\\\\searchncheck\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\n// NameSearchForm.js\nimport React, { useState } from 'react';\nimport { collection, getDocs, addDoc, query, where } from \"firebase/firestore\";\nimport { db } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [data, setData] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleRadioChange = category => {\n    setSelectedCategory(category);\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!selectedCategory) {\n      alert('You have to pick the category of the search');\n      return;\n    }\n    let searchField = null;\n\n    // Determine which field to search based on selected category\n    if (selectedCategory === 'english') searchField = 'nameEN';\n    if (selectedCategory === 'arabic') searchField = 'nameAR';\n    if (selectedCategory === 'code') searchField = 'nameC';\n    try {\n      const q = query(collection(db, 'compColl'), where(searchField, '==', searchValue));\n      const docs = await getDocs(q);\n      const searchR = docs.docs.map(doc => ({\n        ...doc.data()\n      }));\n      setData(searchR);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return [];\n    }\n\n    /*const compCollRef = addDoc(collection(db, 'compColl'), {\r\n        name:\"hi\",\r\n        email:\"hi\",\r\n        message:\"hi\",\r\n      }).then(() => {\r\n        alert(\"success\")\r\n      }).catch((error) => alert(error.message));*/\n\n    /*try {\r\n      // Search for documents where nameAR matches the search value\r\n      const snapshotAR = await compCollRef\r\n        .where('nameAR', '==', searchValue)\r\n        .get();\r\n      const documentsAR = snapshotAR.docs.map(doc => doc.data());\r\n        // Search for documents where nameEN matches the search value\r\n      const snapshotEN = await compCollRef\r\n        .where('nameEN', '==', searchValue)\r\n        .get();\r\n      const documentsEN = snapshotEN.docs.map(doc => doc.data());\r\n        // Search for documents where nameC matches the search value\r\n      const snapshotC = await compCollRef\r\n        .where('nameC', '==', searchValue)\r\n        .get();\r\n      const documentsC = snapshotC.docs.map(doc => doc.data());\r\n        // Combine results from all queries\r\n      const searchResults = [...documentsAR, ...documentsEN, ...documentsC];\r\n        // Update state with search results\r\n      setSearchResult(searchResults);\r\n    } catch (error) {\r\n      console.error('Error searching for documents:', error);\r\n    }*/\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchValue,\n        onChange: e => setSearchValue(e.target.value),\n        placeholder: \"Search by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"category\",\n          value: \"english\",\n          checked: selectedCategory === 'english',\n          onChange: () => handleRadioChange('english')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), \"English\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"category\",\n          value: \"arabic\",\n          checked: selectedCategory === 'arabic',\n          onChange: () => handleRadioChange('arabic')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \"Arabic\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"category\",\n          value: \"code\",\n          checked: selectedCategory === 'code',\n          onChange: () => handleRadioChange('code')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), \"Code\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `Document ID: ${item.nameEN}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(item).map(([key, value]) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: key\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"x5Lulzeo+Skhy65xoc/sUmhb8+I=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","collection","getDocs","addDoc","query","where","db","jsxDEV","_jsxDEV","Test","_s","searchValue","setSearchValue","data","setData","selectedCategory","setSelectedCategory","handleRadioChange","category","handleSearch","e","preventDefault","alert","searchField","q","docs","searchR","map","doc","error","console","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","name","checked","item","style","marginBottom","nameEN","Object","entries","key","id","_c","$RefreshReg$"],"sources":["C:/Users/justm/OneDrive/Desktop/Work/searchncheck/src/Test.js"],"sourcesContent":["// NameSearchForm.js\r\nimport React, { useState } from 'react';\r\nimport { collection, getDocs, addDoc, query, where} from \"firebase/firestore\";\r\nimport { db } from './firebase';\r\n\r\nconst Test = () => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [data, setData] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  const handleRadioChange = (category) => {\r\n    setSelectedCategory(category);\r\n  };\r\n\r\n\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedCategory) {\r\n      alert('You have to pick the category of the search');\r\n      return;\r\n    }\r\n\r\n    let searchField = null;\r\n\r\n    // Determine which field to search based on selected category\r\n    if (selectedCategory === 'english') searchField = 'nameEN';\r\n    if (selectedCategory === 'arabic') searchField = 'nameAR';\r\n    if (selectedCategory === 'code') searchField = 'nameC';\r\n\r\n    \r\n    \r\n    try{\r\n    const q = query(collection(db, 'compColl'), where(searchField, '==', searchValue));\r\n    const docs = await getDocs(q)\r\n    \r\n    const searchR = docs.docs.map(doc => ({\r\n      ...doc.data()\r\n    })); \r\n    setData(searchR)\r\n  }\r\n    catch(error){\r\n    console.error('Error fetching data:', error);\r\n    return [];\r\n  }\r\n\r\n\r\n\r\n    /*const compCollRef = addDoc(collection(db, 'compColl'), {\r\n        name:\"hi\",\r\n        email:\"hi\",\r\n        message:\"hi\",\r\n      }).then(() => {\r\n        alert(\"success\")\r\n      }).catch((error) => alert(error.message));*/\r\n      \r\n    \r\n\r\n    /*try {\r\n      // Search for documents where nameAR matches the search value\r\n      const snapshotAR = await compCollRef\r\n        .where('nameAR', '==', searchValue)\r\n        .get();\r\n      const documentsAR = snapshotAR.docs.map(doc => doc.data());\r\n\r\n      // Search for documents where nameEN matches the search value\r\n      const snapshotEN = await compCollRef\r\n        .where('nameEN', '==', searchValue)\r\n        .get();\r\n      const documentsEN = snapshotEN.docs.map(doc => doc.data());\r\n\r\n      // Search for documents where nameC matches the search value\r\n      const snapshotC = await compCollRef\r\n        .where('nameC', '==', searchValue)\r\n        .get();\r\n      const documentsC = snapshotC.docs.map(doc => doc.data());\r\n\r\n      // Combine results from all queries\r\n      const searchResults = [...documentsAR, ...documentsEN, ...documentsC];\r\n\r\n      // Update state with search results\r\n      setSearchResult(searchResults);\r\n    } catch (error) {\r\n      console.error('Error searching for documents:', error);\r\n    }*/\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          placeholder=\"Search by name\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"category\" value=\"english\" checked={selectedCategory === 'english'} onChange={() => handleRadioChange('english')} />\r\n          English\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"category\" value=\"arabic\" checked={selectedCategory === 'arabic'} onChange={() => handleRadioChange('arabic')} />\r\n          Arabic\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"category\" value=\"code\" checked={selectedCategory === 'code'} onChange={() => handleRadioChange('code')} />\r\n          Code\r\n        </label>\r\n      </div>\r\n      <div>\r\n      {data.map(item => (\r\n        <div key={item.id} style={{ marginBottom: '20px' }}>\r\n          <h3>{`Document ID: ${item.nameEN}`}</h3>\r\n          <table>\r\n            <tbody>\r\n              {Object.entries(item).map(([key, value]) => {\r\n                return (\r\n                  <tr key={key}>\r\n                    <th>{key}</th>\r\n                    <td>{value}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}