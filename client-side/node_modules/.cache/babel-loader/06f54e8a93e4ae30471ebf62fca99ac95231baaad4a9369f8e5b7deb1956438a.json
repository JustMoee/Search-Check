{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justm\\\\OneDrive\\\\Desktop\\\\Work\\\\searchncheck\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\n// NameSearchForm.js\nimport React, { useState } from 'react';\nimport { collection, getDocs, addDoc } from \"firebase/firestore\";\nimport { db } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault();\n    try {\n      const data = await getDocs(collection(db, 'compColl'));\n      console.log(data.docs.map(doc => ({\n        ...doc.data()\n      }).filter(object.nameC === \"KF\")));\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      return [];\n    }\n\n    /*const compCollRef = addDoc(collection(db, 'compColl'), {\r\n        name:\"hi\",\r\n        email:\"hi\",\r\n        message:\"hi\",\r\n      }).then(() => {\r\n        alert(\"success\")\r\n      }).catch((error) => alert(error.message));*/\n\n    /*try {\r\n      // Search for documents where nameAR matches the search value\r\n      const snapshotAR = await compCollRef\r\n        .where('nameAR', '==', searchValue)\r\n        .get();\r\n      const documentsAR = snapshotAR.docs.map(doc => doc.data());\r\n        // Search for documents where nameEN matches the search value\r\n      const snapshotEN = await compCollRef\r\n        .where('nameEN', '==', searchValue)\r\n        .get();\r\n      const documentsEN = snapshotEN.docs.map(doc => doc.data());\r\n        // Search for documents where nameC matches the search value\r\n      const snapshotC = await compCollRef\r\n        .where('nameC', '==', searchValue)\r\n        .get();\r\n      const documentsC = snapshotC.docs.map(doc => doc.data());\r\n        // Combine results from all queries\r\n      const searchResults = [...documentsAR, ...documentsEN, ...documentsC];\r\n        // Update state with search results\r\n      setSearchResult(searchResults);\r\n    } catch (error) {\r\n      console.error('Error searching for documents:', error);\r\n    }*/\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchValue,\n        onChange: e => setSearchValue(e.target.value),\n        placeholder: \"Search by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), searchResult.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResult.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result.nameAR\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"LDdINcOpBHVclKfc7oo1EkIX0ZQ=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","collection","getDocs","addDoc","db","jsxDEV","_jsxDEV","Test","_s","searchValue","setSearchValue","searchResult","setSearchResult","handleSearch","e","preventDefault","data","console","log","docs","map","doc","filter","object","nameC","error","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","result","index","nameAR","_c","$RefreshReg$"],"sources":["C:/Users/justm/OneDrive/Desktop/Work/searchncheck/src/Test.js"],"sourcesContent":["// NameSearchForm.js\r\nimport React, { useState } from 'react';\r\nimport { collection, getDocs, addDoc} from \"firebase/firestore\";\r\nimport { db } from './firebase';\r\n\r\nconst Test = () => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  \r\n  \r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    try{\r\n    const data = await getDocs(collection(db, 'compColl'));\r\n    console.log(data.docs.map(doc => ({\r\n      ...doc.data()}.filter(object.nameC === \"KF\") \r\n    )))\r\n  }\r\n    catch(error){\r\n    console.error('Error fetching data:', error);\r\n    return [];\r\n  }\r\n\r\n    /*const compCollRef = addDoc(collection(db, 'compColl'), {\r\n        name:\"hi\",\r\n        email:\"hi\",\r\n        message:\"hi\",\r\n      }).then(() => {\r\n        alert(\"success\")\r\n      }).catch((error) => alert(error.message));*/\r\n      \r\n    \r\n\r\n    /*try {\r\n      // Search for documents where nameAR matches the search value\r\n      const snapshotAR = await compCollRef\r\n        .where('nameAR', '==', searchValue)\r\n        .get();\r\n      const documentsAR = snapshotAR.docs.map(doc => doc.data());\r\n\r\n      // Search for documents where nameEN matches the search value\r\n      const snapshotEN = await compCollRef\r\n        .where('nameEN', '==', searchValue)\r\n        .get();\r\n      const documentsEN = snapshotEN.docs.map(doc => doc.data());\r\n\r\n      // Search for documents where nameC matches the search value\r\n      const snapshotC = await compCollRef\r\n        .where('nameC', '==', searchValue)\r\n        .get();\r\n      const documentsC = snapshotC.docs.map(doc => doc.data());\r\n\r\n      // Combine results from all queries\r\n      const searchResults = [...documentsAR, ...documentsEN, ...documentsC];\r\n\r\n      // Update state with search results\r\n      setSearchResult(searchResults);\r\n    } catch (error) {\r\n      console.error('Error searching for documents:', error);\r\n    }*/\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          placeholder=\"Search by name\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      {searchResult.length > 0 && (\r\n        <div>\r\n          <h2>Search Results:</h2>\r\n          <ul>\r\n            {searchResult.map((result, index) => (\r\n              <li key={index}>{result.nameAR}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}